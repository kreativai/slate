{
	"info": {
		"_postman_id": "8e89f7d8-473b-4085-a83a-8d8295b2927f",
		"name": "generative.photos API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Upload new image to gallery",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d0f9bfe5-ab4f-4f75-9293-8a2e5a7d98bf",
						"exec": [
							"tests[\"Successful POST request\"] = responseCode.code === 200 || responseCode.code === 201 || responseCode.code === 202;",
							"",
							"if (tests[\"Successful POST request\"]) {",
							"    var jsonData = JSON.parse(responseBody);",
							"    postman.setEnvironmentVariable(\"original-image-id\", jsonData.id);",
							"}",
							"else {",
							"    postman.setNextRequest(null)",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{jwt}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "object",
							"type": "file",
							"src": []
						}
					],
					"options": {
						"formdata": {}
					}
				},
				"url": {
					"raw": "{{base_url}}/teams/me/gallery",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"teams",
						"me",
						"gallery"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get uploaded image status",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b61d14ec-3dec-4b17-bafc-62566ef46ba2",
						"exec": [
							"tests[\"Successful GET request\"] = responseCode.code === 200;",
							"",
							"const maxNumberOfTries = 10; // your max number of tries",
							"const sleepBetweenTries = 20000; // your interval between attempts",
							"",
							"if (!pm.environment.get(\"tries\")) {",
							"    pm.environment.set(\"tries\", 1);",
							"}",
							"",
							"",
							"const jsonData = pm.response.json();",
							"",
							"if ((jsonData.data.faces === undefined) && (pm.environment.get(\"tries\") < maxNumberOfTries)) {",
							"     const tries = parseInt(pm.environment.get(\"tries\"), 10);",
							"     pm.environment.set(\"tries\", tries + 1);",
							"     setTimeout(function() {}, sleepBetweenTries);",
							"     postman.setNextRequest(request.name);",
							" } else {",
							"     pm.environment.unset(\"tries\");",
							"",
							"     tests[\"Generation complete\"] = jsonData.data.task.status === 'complete';",
							"     ",
							"     if (tests[\"Generation complete\"]) {",
							"     }",
							"     else {",
							"         postman.setNextRequest(null)",
							"     }",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{jwt}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [],
					"options": {
						"formdata": {}
					}
				},
				"url": {
					"raw": "{{base_url}}/teams/me/gallery/{{original-image-id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"teams",
						"me",
						"gallery",
						"{{original-image-id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new image variant (idempotent)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "be8958a1-fd8b-4d2e-8df5-e2474459e2a4",
						"exec": [
							"tests[\"Successful POST request\"] = responseCode.code === 200 || responseCode.code === 201 || responseCode.code === 202;",
							"",
							"if (tests[\"Successful POST request\"]) {",
							"    var jsonData = JSON.parse(responseBody);",
							"    postman.setEnvironmentVariable(\"variant-image-id\", jsonData.id);",
							"}",
							"else {",
							"    postman.setNextRequest(null)",
							"}",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{jwt}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"move\": \"FemaleAsian\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/teams/me/gallery/{{original-image-id}}/faces/default",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"teams",
						"me",
						"gallery",
						"{{original-image-id}}",
						"faces",
						"default"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get status of the new variant",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "aa0f7a45-3a1d-441e-ab3d-f23547dbe316",
						"exec": [
							"tests[\"Successful GET request\"] = responseCode.code === 200;",
							"",
							"const maxNumberOfTries = 10; // your max number of tries",
							"const sleepBetweenTries = 20000; // your interval between attempts",
							"",
							"if (!pm.environment.get(\"tries\")) {",
							"    pm.environment.set(\"tries\", 1);",
							"}",
							"",
							"",
							"const jsonData = pm.response.json();",
							"",
							"if ((jsonData.data.task.status !== 'complete') && (pm.environment.get(\"tries\") < maxNumberOfTries)) {",
							"     const tries = parseInt(pm.environment.get(\"tries\"), 10);",
							"     pm.environment.set(\"tries\", tries + 1);",
							"     setTimeout(function() {}, sleepBetweenTries);",
							"     postman.setNextRequest(request.name);",
							" } else {",
							"     pm.environment.unset(\"tries\");",
							"",
							"     tests[\"Generation complete\"] = jsonData.data.task.status === 'complete';",
							"     ",
							"     if (tests[\"Generation complete\"]) {",
							"     }",
							"     else {",
							"         postman.setNextRequest(null)",
							"     }",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{jwt}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{base_url}}/teams/me/gallery/{{variant-image-id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"teams",
						"me",
						"gallery",
						"{{variant-image-id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Full Res bytes (PNG) of the generated variant",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8f4a2d90-db46-4554-b306-07006667a0fc",
						"exec": [
							"tests[\"Successful GET request\"] = responseCode.code === 200;",
							"",
							"if (tests[\"Successful GET request\"]) {",
							"}",
							"else {",
							"    postman.setNextRequest(null)",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{jwt}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{base_url}}/teams/me/gallery/{{variant-image-id}}/pixels/original/bytes",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"teams",
						"me",
						"gallery",
						"{{variant-image-id}}",
						"pixels",
						"original",
						"bytes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create another image variant (idempotent)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d1ad4987-e1a3-4f42-85f3-4800b648684c",
						"exec": [
							"tests[\"Successful POST request\"] = responseCode.code === 200 || responseCode.code === 201 || responseCode.code === 202;",
							"",
							"if (tests[\"Successful POST request\"]) {",
							"    var jsonData = JSON.parse(responseBody);",
							"    postman.setEnvironmentVariable(\"variant-image-id\", jsonData.id);",
							"}",
							"else {",
							"    postman.setNextRequest(null)",
							"}",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{jwt}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"move\": \"smile\", \n\t\"param\": 0.9\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/teams/me/gallery/{{original-image-id}}/faces/default",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"teams",
						"me",
						"gallery",
						"{{original-image-id}}",
						"faces",
						"default"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get status of the new variant",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f685896b-29ad-4ebf-b288-cc68a9de9000",
						"exec": [
							"tests[\"Successful GET request\"] = responseCode.code === 200;",
							"",
							"const maxNumberOfTries = 10; // your max number of tries",
							"const sleepBetweenTries = 20000; // your interval between attempts",
							"",
							"if (!pm.environment.get(\"tries\")) {",
							"    pm.environment.set(\"tries\", 1);",
							"}",
							"",
							"",
							"const jsonData = pm.response.json();",
							"",
							"if ((jsonData.data.task.status !== 'complete') && (pm.environment.get(\"tries\") < maxNumberOfTries)) {",
							"     const tries = parseInt(pm.environment.get(\"tries\"), 10);",
							"     pm.environment.set(\"tries\", tries + 1);",
							"     setTimeout(function() {}, sleepBetweenTries);",
							"     postman.setNextRequest(request.name);",
							" } else {",
							"     pm.environment.unset(\"tries\");",
							"",
							"     tests[\"Generation complete\"] = jsonData.data.task.status === 'complete';",
							"     ",
							"     if (tests[\"Generation complete\"]) {",
							"     }",
							"     else {",
							"         postman.setNextRequest(null)",
							"     }",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{jwt}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [],
					"options": {
						"formdata": {}
					}
				},
				"url": {
					"raw": "{{base_url}}/teams/me/gallery/{{variant-image-id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"teams",
						"me",
						"gallery",
						"{{variant-image-id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Full Res bytes (PNG) of the generated variant",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "20640180-cae7-4b14-b8d4-106a3a54fb49",
						"exec": [
							"tests[\"Successful GET request\"] = responseCode.code === 200;",
							"",
							"if (tests[\"Successful GET request\"]) {",
							"}",
							"else {",
							"    postman.setNextRequest(null)",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "{{jwt}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [],
					"options": {
						"formdata": {}
					}
				},
				"url": {
					"raw": "{{base_url}}/teams/me/gallery/{{variant-image-id}}/pixels/original/bytes",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"teams",
						"me",
						"gallery",
						"{{variant-image-id}}",
						"pixels",
						"original",
						"bytes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Archive original",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ecb1ef0b-6aff-488f-aa82-44b151f35bde",
						"exec": [
							"tests[\"Successful PATCH request\"] = responseCode.code === 200 || responseCode.code === 201 || responseCode.code === 202;",
							"",
							"if (tests[\"Successful PATCH request\"]) {",
							"}",
							"else {",
							"    postman.setNextRequest(null)",
							"}",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{jwt}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"status\": {\n\t\t\"archived\": true\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/teams/me/gallery/{{original-image-id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"teams",
						"me",
						"gallery",
						"{{original-image-id}}"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}